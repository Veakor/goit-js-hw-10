{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast/dist/js/iziToast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n\n        if (userSelectedDate < new Date()) {\n            iziToast.error({\n                title: \"Error\",\n                message: \"Please choose a date in the future\",\n            });\n\n            document.querySelector('[data-start]').disabled = true;\n        } else {\n            document.querySelector('[data-start]').disabled = false;\n        }\n    },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n    \n    if (userSelectedDate && userSelectedDate > new Date()) {\n        startTimer(userSelectedDate);\n    }\n});\n\nfunction startTimer(endDate) {\n    const timerInterval = setInterval(() => {\n        const timeDifference = endDate - new Date();\n\n        if (timeDifference <= 0) {\n            clearInterval(timerInterval);\n            updateTimerUI(0, 0, 0, 0);\n            iziToast.success({\n                title: \"Success\",\n                message: \"Time's up!\",\n            });\n        } else {\n            const { days, hours, minutes, seconds } = convertMs(timeDifference);\n            updateTimerUI(days, hours, minutes, seconds);\n        }\n    }, 1000);\n}\n\nfunction updateTimerUI(days, hours, minutes, seconds) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n    return value < 10 ? `0${value}` : value;\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n  "],"names":["userSelectedDate","options","selectedDates","iziToast","flatpickr","startTimer","endDate","timerInterval","timeDifference","updateTimerUI","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"qIAKA,IAAIA,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBF,EAAmBE,EAAc,GAE7BF,EAAmB,IAAI,MACvBG,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,EAED,SAAS,cAAc,cAAc,EAAE,SAAW,IAElD,SAAS,cAAc,cAAc,EAAE,SAAW,EAEzD,CACL,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CAE/DD,GAAoBA,EAAmB,IAAI,MAC3CK,EAAWL,CAAgB,CAEnC,CAAC,EAED,SAASK,EAAWC,EAAS,CACzB,MAAMC,EAAgB,YAAY,IAAM,CACpC,MAAMC,EAAiBF,EAAU,IAAI,KAErC,GAAIE,GAAkB,EAClB,cAAcD,CAAa,EAC3BE,EAAc,EAAG,EAAG,EAAG,CAAC,EACxBN,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,YACzB,CAAa,MACE,CACH,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAc,EAClEC,EAAcC,EAAMC,EAAOC,EAASC,CAAO,CAC9C,CACJ,EAAE,GAAI,CACX,CAEA,SAASJ,EAAcC,EAAMC,EAAOC,EAASC,EAAS,CAClD,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CACjF,CAEA,SAASE,EAAeC,EAAO,CAC3B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACtC,CAEA,SAASF,EAAUG,EAAI,CAMnB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}