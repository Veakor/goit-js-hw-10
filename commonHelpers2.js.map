{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast/dist/js/iziToast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector('.form');\n\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  \n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stateInputs = document.querySelectorAll('input[name=\"state\"]');\n  \n  \n  const delay = parseInt(delayInput.value);\n  const state = Array.from(stateInputs).find(input => input.checked).value;\n\n  \n  const promise = new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      if (state === \"fulfilled\") {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  \n  promise.then((delay) => {\n   \n    iziToast.success({\n      title: \"Fulfilled promise\",\n      message: `✅ Fulfilled promise in ${delay}ms`,\n    });\n  }).catch((delay) => {\n    \n    iziToast.error({\n      title: \"Rejected promise\",\n      message: `❌ Rejected promise in ${delay}ms`,\n    });\n  });\n});\n"],"names":["form","event","delayInput","stateInputs","delay","state","input","resolve","reject","iziToast"],"mappings":"wIAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAG3CA,EAAK,iBAAiB,SAAU,SAAUC,EAAO,CAC/CA,EAAM,eAAc,EAGpB,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAc,SAAS,iBAAiB,qBAAqB,EAG7DC,EAAQ,SAASF,EAAW,KAAK,EACjCG,EAAQ,MAAM,KAAKF,CAAW,EAAE,KAAKG,GAASA,EAAM,OAAO,EAAE,MAGnD,IAAI,QAAQ,CAACC,EAASC,IAAW,CAE/C,WAAW,IAAM,CACXH,IAAU,YACZE,EAAQH,CAAK,EAEbI,EAAOJ,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAGO,KAAMA,GAAU,CAEtBK,EAAS,QAAQ,CACf,MAAO,oBACP,QAAS,0BAA0BL,KACzC,CAAK,CACL,CAAG,EAAE,MAAOA,GAAU,CAElBK,EAAS,MAAM,CACb,MAAO,mBACP,QAAS,yBAAyBL,KACxC,CAAK,CACL,CAAG,CACH,CAAC"}